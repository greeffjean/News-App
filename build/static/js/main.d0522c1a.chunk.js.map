{"version":3,"sources":["services/news.service.js","components/SearchBar.js","components/Results.js","redux/actions.js","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","SearchBar","state","window","history","this","getRequest","input","filterDate","onpopstate","location","pathname","resetApp","pathParams","toString","firstParam","substring","length","split","secondParam","e","props","inputValue","term","pushState","event","type","dispatch","payload","target","value","handleLoad","query","filter","url","Promise","resolve","req","Request","headers","Authorization","fetch","then","response","console","log","json","catch","searchTitles","articles","message","resetInput","error","windowState","className","loading","TextField","onChange","handleChange","id","name","label","searchButton","InputLabelProps","shrink","Button","variant","onClick","handleSubmit","userHasSearched","Component","connect","Results","CircularProgress","color","Alert","severity","map","val","Card","CardHeader","avatar","Avatar","aria-label","author","charAt","title","subheader","publishedAt","CardMedia","image","urlToImage","CardContent","Typography","component","source","description","HANDLE_CHANGE","HANDLE_LOAD","ERROR","SEARCH_BUTTON","INPUT","FILTER_DATE","RESET_INPUT","HANDLE_SUBMIT","RESET_APP","initialState","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","useState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","require","config"],"mappings":"uPACMA,EAAM,mC,8BCsBNC,E,kLAGmB,IAAD,OACVC,EAAQC,OAAOC,QAAQF,MAEzBC,OAAOC,QAAQF,OACfG,KAAKC,WAAWJ,EAAMK,MAAOL,EAAMM,YAGvCL,OAAOM,WAAa,WAChB,GAAgC,KAA5BN,OAAOO,SAASC,SAChB,EAAKC,eAEJ,CACD,IAAIC,EAAaV,OAAOO,SAASC,SAASG,WAEpCC,GADNF,EAAaA,EAAWG,UAAU,EAAGH,EAAWI,SAClBC,MAAM,IAAK,GACnCC,EAAcN,EAAWK,MAAM,IAAK,GAC1C,EAAKZ,WAAWS,EAAYI,O,mCAQvBC,GAAI,IAAD,EAKRf,KAAKgB,MAFLd,EAHQ,EAGRA,MACAC,EAJQ,EAIRA,WAGEc,EAAaF,EAAEG,KAAOH,EAAEG,KAAOhB,EAGrCJ,OAAOC,QAAQoB,UACX,CACIjB,MAAOe,EACPd,WAAYA,GAHpB,WAKQc,EALR,YAKsBd,GALtB,WAKwCc,EALxC,YAKsDd,IAGtDH,KAAKC,WAAWgB,EAAYd,K,mCAMvBiB,EAAOC,GAChBrB,KAAKgB,MAAMM,SAAS,CAChBD,KAAM,gBACNE,QAAS,CACLrB,MAAe,QAARmB,EAAiBD,EAAMI,OAAOC,MAAQzB,KAAKgB,MAAMd,MACxDC,WAAoB,QAARkB,EAAiBD,EAAMI,OAAOC,MAAQzB,KAAKgB,MAAMb,gB,mCASrEH,KAAKgB,MAAMM,SAAS,CAAED,KAAM,kB,iCAMrBJ,EAAYd,GAAa,IAAD,OAE/BH,KAAK0B,aD7FN,SAAsBC,EAAOC,GAEhC,IAAIC,EAAM,gDACDF,EADC,oBAEEC,EAFF,KAGN,qBAHM,iBAIIjC,GAEd,OAAO,IAAImC,SAAQ,SAAAC,GACf,IAAIC,EAAM,IAAIC,QAAQJ,EAAK,CACvBK,QAAS,CACLC,cAAc,UAAD,OAAYxC,MAKjCyC,MAAMJ,EAAK,CAAEE,QAAS,CAClBC,cAAc,UAAD,OAAYxC,MAExB0C,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZP,EAAQO,EAASG,WAElBC,OAAM,SAAAJ,GACLP,EAAQO,GACRC,QAAQC,IAAIF,SCsEpBK,CAAa1B,EAAYd,GAAYkC,MAAK,SAAAC,GACtCC,QAAQC,IAAIF,GAEZ,EAAKtB,MAAMM,SAAS,CAChBD,KAAM,gBACNE,QAAS,CACLqB,SAAUN,EAASM,SAAWN,EAASM,SAAW,KAClDC,QAASP,EAASO,WAI1B,EAAKC,gBACNJ,OAAM,SAAAK,GACLR,QAAQC,IAAIO,Q,iCAQhB/C,KAAKgB,MAAMM,SAAS,CAAED,KAAM,gB,mCAO5BrB,KAAKgB,MAAMM,SAAS,CAAED,KAAM,kB,+BAKtB,IAAD,OAEC2B,EAAclD,OAAOC,QAAQF,MAEnC,OACI,sBAAKoD,UAAU,qBAAf,UACI,qBAAKA,UAAWD,EAAc,oBAAsB,aAApD,SAEI,sBAAKC,UAAWjD,KAAKgB,MAAMkC,QAAU,0BAA4B,kBAAjE,UACI,sBAAKD,UAAU,mBAAf,UACI,0CAAiB,8CAGrB,sBAAKA,UAAU,gBAAf,UACI,cAACE,EAAA,EAAD,CACIC,SAAU,SAACrC,GAAD,OAAO,EAAKsC,aAAatC,EAAG,SACtCuC,GAAG,iBACHC,KAAK,QACLC,MAAM,mBACN/B,MAAOzB,KAAKgB,MAAMd,QAErBF,KAAKgB,MAAMyC,cACR,sBAAKR,UAAU,wBAAf,UACI,cAACE,EAAA,EAAD,CACIC,SAAU,SAACrC,GAAD,OAAO,EAAKsC,aAAatC,EAAG,SACtCuC,GAAG,OACHC,KAAK,aACLC,MAAM,OACNnC,KAAK,OACLqC,gBAAiB,CACbC,QAAQ,KAIhB,cAACC,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,SAAC/C,GAAD,OAAO,EAAKgD,aAAahD,IAFtC,gCAYlBf,KAAKgB,MAAMgD,kBAAoBhE,KAAKgB,MAAMkC,SACxC,sBAAKD,UAAU,eAAf,UACI,cAACW,EAAA,EAAD,CACIE,QAAS,SAAC/C,GAAD,OAAO,EAAKgD,aAAa,CAAE7C,KAAM,WAC1C+B,UAAU,YACVY,QAAQ,YAHZ,6BAOA,cAACD,EAAA,EAAD,CACIE,QAAS,SAAC/C,GAAD,OAAO,EAAKgD,aAAa,CAAE7C,KAAM,UAC1C+B,UAAU,SACVY,QAAQ,YAHZ,sC,GAnKAI,aAgLTC,eA7LS,SAACrE,GACrB,MAAO,CACH+C,SAAU/C,EAAM+C,SAChBM,QAASrD,EAAMqD,QACfH,MAAOlD,EAAMkD,MACbU,aAAc5D,EAAM4D,aACpBvD,MAAOL,EAAMK,MACbC,WAAYN,EAAMM,WAClB6D,gBAAiBnE,EAAMmE,mBAqLhBE,CAAyBtE,G,uEC3KlCuE,E,uKAGE,OACI,oCAEKnE,KAAKgB,MAAMkC,SACR,qBAAKD,UAAU,oBAAf,SACI,cAACmB,EAAA,EAAD,CAAkBC,MAAM,gBAK/BrE,KAAKgB,MAAM+B,QAAU/C,KAAKgB,MAAMkC,SAC7B,cAACoB,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBvE,KAAKgB,MAAM+B,QAKtC/C,KAAKgB,MAAM4B,WAAa5C,KAAKgB,MAAMkC,SAEjC,qBAAKD,UAAU,mBAAf,SAEQjD,KAAKgB,MAAM4B,SAAShC,QACpBZ,KAAKgB,MAAM4B,SAAS4B,KAAI,SAAAC,GACpB,OAAO,eAACC,EAAA,EAAD,WACH,cAACC,EAAA,EAAD,CACIC,OACI,cAACC,EAAA,EAAD,CAAQC,aAAW,UAAnB,SACKL,EAAIM,OAASN,EAAIM,OAAOC,OAAO,GAAK,MAG7CC,MAAOR,EAAIQ,MACXC,UAAWT,EAAIU,cAEnB,cAACC,EAAA,EAAD,CACIC,MAAOZ,EAAIa,WACXL,MAAM,gBAEV,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYnB,MAAM,OAAOoB,UAAU,KAAnC,SACKhB,EAAIiB,OAAOnC,OAGhB,cAACiC,EAAA,EAAD,CAAY3B,QAAQ,QAAQQ,MAAM,gBAAgBoB,UAAU,IAA5D,SACKhB,EAAIkB,gC,GA7C3B1B,aA+DPC,eA3ES,SAACrE,GACrB,MAAO,CACH+C,SAAU/C,EAAM+C,SAChBM,QAASrD,EAAMqD,QACfH,MAAOlD,EAAMkD,MACbU,aAAc5D,EAAM4D,aACpBvD,MAAOL,EAAMK,MACbC,WAAYN,EAAMM,cAoEX+D,CAAyBC,G,gBC1F3ByB,EAAgB,gBAChBC,EAAc,cACdC,EAAQ,QACRC,EAAgB,gBAChBC,EAAQ,QACRC,EAAc,cACdC,EAAc,cACdC,EAAgB,gBAChBC,EAAY,YCGnBC,EAAe,CACjBzD,SAAU,KACVM,UAASpD,OAAOC,QAAQF,MACxBkD,MAAO,KACPU,cAAc,EACdvD,MAAO,GACPC,WAAY,GACZ6D,iBAAiB,GAgENsC,EA5DC,WAAmC,IAAlCzG,EAAiC,uDAAzBwG,EAAcE,EAAW,uCAC9C,OAAQA,EAAOlF,MACX,KAAK8E,EACD,OAAO,2BACAtG,GADP,IAEI+C,SAAU2D,EAAOhF,QAAQqB,SACzBM,SAAS,EACTH,MAAOwD,EAAOhF,QAAQsB,QAAU0D,EAAOhF,QAAQsB,QAAU,KACzDmB,iBAAiB,IAEzB,KAAK4B,EACD,OAAO,2BACA/F,GADP,IAEIK,MAAOqG,EAAOhF,QAAQrB,MACtBuD,eAAc8C,EAAOhF,QACrBpB,WAAYoG,EAAOhF,QAAQpB,aAEnC,KAAK0F,EACD,OAAO,2BACAhG,GADP,IAEIqD,SAASrD,EAAMqD,UAEvB,KAAK4C,EACD,MAAO,CACH/C,MAAO,MAEf,KAAKgD,EACD,MAAO,CACHtC,aAAc,MAEtB,KAAKuC,EACD,MAAO,CACH9F,MAAO,MAEf,KAAK+F,EACD,MAAO,CACH9F,WAAY,MAEpB,KAAK+F,EACD,OAAO,2BACArG,GADP,IAEI4D,cAAc,EACdvD,MAAO,GACPC,WAAY,KAEpB,KAAKiG,EACD,MAAO,CACHxD,SAAU,KACVM,UAASpD,OAAOC,QAAQF,MACxBkD,MAAO,KACPU,cAAc,EACdvD,MAAO,GACPC,WAAY,GACZ6D,iBAAiB,GAEzB,QACI,OAAOnE,ICzEJ2G,EAFDC,YAAYH,EAASxG,OAAO4G,8BAAgC5G,OAAO4G,gC,MC0BlEC,MArBf,WAAe,MAGqBC,mBAAS,CACzChE,SAAU,KACVM,SAAS,EACTH,MAAO,OANI,mBAUb,OAVa,UAWX,cAAC,IAAD,CAAUyD,MAAOA,EAAjB,SACE,sBAAKvD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCXO4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BC,EAAQ,IAAUC,SAClBd,M","file":"static/js/main.d0522c1a.chunk.js","sourcesContent":["\nconst apiKey = `defde18384ea44d1b5cb7f73809c12d9`;\n\nexport function searchTitles(query, filter) {\n\n    var url = 'http://newsapi.org/v2/everything?' +\n        `q=${query}&` +\n        `from=${filter}&` +\n        'sortBy=popularity&' +\n        `apiKey=${apiKey}`;\n\n    return new Promise(resolve => {\n        var req = new Request(url, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        }\n            );\n\n        fetch(req, { headers: {\n            Authorization: `Bearer ${apiKey}`\n          }})\n            .then(response => {\n                console.log(response);\n                resolve(response.json())\n\n            }).catch(response => {\n                resolve(response)\n                console.log(response)\n            })\n    })\n}\n","\nimport { searchTitles } from '../services/news.service';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core'\n\n// Redux Props\nconst mapStateToProps = (state) => {\n    return {\n        articles: state.articles,\n        loading: state.loading,\n        error: state.error,\n        searchButton: state.searchButton,\n        input: state.input,\n        filterDate: state.filterDate,\n        userHasSearched: state.userHasSearched\n    };\n};\n\n\nclass SearchBar extends Component {\n\n\n    componentDidMount() {\n        const state = window.history.state;\n        // Browser Refreshes\n        if (window.history.state) {\n            this.getRequest(state.input, state.filterDate);\n        };\n        // Browser Back \n        window.onpopstate = () => {\n            if (window.location.pathname == \"/\") {\n                this.resetApp()\n            }\n            else {\n                let pathParams = window.location.pathname.toString();\n                pathParams = pathParams.substring(1, pathParams.length);\n                const firstParam = pathParams.split(\"/\", 1);\n                const secondParam = pathParams.split(\"/\", 2);\n                this.getRequest(firstParam, secondParam)\n            };\n        };\n    };\n\n\n\n        // Handle Submit\n        handleSubmit(e) {\n\n            const {\n                input,\n                filterDate\n            } = this.props;\n\n            const inputValue = e.term ? e.term : input;\n\n            // save state to Browser Window\n            window.history.pushState(\n                {\n                    input: inputValue,\n                    filterDate: filterDate\n                },\n                `/${inputValue}/${filterDate}`, `/${inputValue}/${filterDate}`\n            );\n            // API function\n            this.getRequest(inputValue, filterDate);\n        };\n\n\n\n    // Handle Change\n    handleChange(event, type) {\n        this.props.dispatch({\n            type: \"HANDLE_CHANGE\",\n            payload: {\n                input: type == \"text\" ? event.target.value : this.props.input,\n                filterDate: type == \"date\" ? event.target.value : this.props.filterDate,\n            }\n        });\n    };\n\n\n\n    // Handle Load\n    handleLoad() {\n        this.props.dispatch({ type: \"HANDLE_LOAD\" });\n    };\n\n\n\n    // Get Request\n    getRequest(inputValue, filterDate) {\n        // load\n        this.handleLoad();\n\n        searchTitles(inputValue, filterDate).then(response => {\n            console.log(response);\n            // redux function\n            this.props.dispatch({\n                type: \"HANDLE_SUBMIT\",\n                payload: {\n                    articles: response.articles ? response.articles : null,\n                    message: response.message,\n                }\n            });\n            // reset input\n            this.resetInput()\n        }).catch(error => {\n            console.log(error)\n        });\n    };\n\n\n\n    // Reset App\n    resetApp() {\n        this.props.dispatch({ type: \"RESET_APP\" });\n    };\n\n\n\n    // Reset Input Fields\n    resetInput() {\n        this.props.dispatch({ type: \"RESET_INPUT\" });\n    };\n\n\n\n    render() {\n\n        const windowState = window.history.state;\n\n        return (\n            <div className=\"search-bar-wrapper\">\n                <div className={windowState ? \"search-bar active\" : \"search-bar\"}>\n\n                    <div className={this.props.loading ? \"content-wrapper loading\" : \"content-wrapper\"}>\n                        <div className=\"content-headings\">\n                            <h1>Discover</h1><h2>Headlines</h2>\n                        </div>\n\n                        <div className=\"content-input\">\n                            <TextField\n                                onChange={(e) => this.handleChange(e, \"text\")}\n                                id=\"standard-basic\"\n                                name=\"input\"\n                                label=\"Search Headlines\"\n                                value={this.props.input}\n                            />\n                            {this.props.searchButton &&\n                                <div className=\"filter-search-wrapper\">\n                                    <TextField\n                                        onChange={(e) => this.handleChange(e, \"date\")}\n                                        id=\"date\"\n                                        name=\"filterDate\"\n                                        label=\"Date\"\n                                        type=\"date\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <Button\n                                        variant=\"contained\"\n                                        onClick={(e) => this.handleSubmit(e)}\n                                    >\n                                        Search\n                                </Button>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                {!this.props.userHasSearched && !this.props.loading &&\n                    <div className=\"home-options\">\n                        <Button\n                            onClick={(e) => this.handleSubmit({ term: \"covid\" })}\n                            className=\"headlines\"\n                            variant=\"contained\"\n                        >\n                            COVID Headlines\n                </Button>\n                        <Button\n                            onClick={(e) => this.handleSubmit({ term: \"FIFA\" })}\n                            className=\"latest\"\n                            variant=\"contained\"\n                        >\n                            FIFA Headlines</Button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SearchBar)","\nimport React, { Component } from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { connect } from 'react-redux';\nimport {\n    CircularProgress,\n    Typography,\n    Avatar,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    Card\n} from '@material-ui/core';\n\n\n// Redux Props\nconst mapStateToProps = (state) => {\n    return {\n        articles: state.articles,\n        loading: state.loading,\n        error: state.error,\n        searchButton: state.searchButton,\n        input: state.input,\n        filterDate: state.filterDate,\n    };\n};\n\n\nclass Results extends Component {\n\n    render() {\n        return (\n            <section>\n                {/* Loading */}\n                {this.props.loading && \n                    <div className=\"circular-progress\">\n                        <CircularProgress color=\"secondary\" />\n                    </div>\n                }\n\n                {/* Error Feedback */}\n                {this.props.error && !this.props.loading &&\n                    <Alert severity=\"error\">{this.props.error}</Alert>\n                }\n\n\n                {/* Articles */}\n                { this.props.articles && !this.props.loading &&\n\n                    <div className=\"articles-wrapper\">\n                        {\n                            this.props.articles.length &&\n                            this.props.articles.map(val => {\n                                return <Card>\n                                    <CardHeader\n                                        avatar={\n                                            <Avatar aria-label=\"initial\">\n                                                {val.author ? val.author.charAt(0) : \"N\"}\n                                            </Avatar>\n                                        }\n                                        title={val.title}\n                                        subheader={val.publishedAt}\n                                    />\n                                    <CardMedia\n                                        image={val.urlToImage}\n                                        title=\"Paella dish\"\n                                    />\n                                    <CardContent>\n                                        <Typography color=\"pink\" component=\"h4\">\n                                            {val.source.name}\n                                        </Typography>\n\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                            {val.description}\n                                        </Typography>\n                                    </CardContent>\n\n                                </Card>\n                            })\n                        }\n                    </div>\n\n\n                }\n\n            </section>\n        )\n    };\n\n};\n\nexport default connect(mapStateToProps)(Results)\n","\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\nexport const HANDLE_LOAD = \"HANDLE_LOAD\";\nexport const ERROR = \"ERROR\";\nexport const SEARCH_BUTTON = \"SEARCH_BUTTON\";\nexport const INPUT = \"INPUT\";\nexport const FILTER_DATE = \"FILTER_DATE\";\nexport const RESET_INPUT = \"RESET_INPUT\";\nexport const HANDLE_SUBMIT = \"HANDLE_SUBMIT\";\nexport const RESET_APP = \"RESET_APP\";\n","import {\n    HANDLE_CHANGE,\n    HANDLE_LOAD,\n    ERROR,\n    SEARCH_BUTTON,\n    INPUT,\n    FILTER_DATE,\n    RESET_INPUT,\n    HANDLE_SUBMIT,\n    RESET_APP\n} from './actions';\n\nconst initialState = {\n    articles: null,\n    loading: window.history.state ? true : false, // On page refreshes show loading circle until getRequest populates state\n    error: null,\n    searchButton: false,\n    input: \"\",\n    filterDate: \"\",\n    userHasSearched: false\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case HANDLE_SUBMIT:\n            return {\n                ...state,\n                articles: action.payload.articles,\n                loading: false,\n                error: action.payload.message ? action.payload.message : null,\n                userHasSearched: true\n            };\n        case HANDLE_CHANGE:\n            return {\n                ...state,\n                input: action.payload.input,\n                searchButton: action.payload ? true : false,\n                filterDate: action.payload.filterDate\n            };\n        case HANDLE_LOAD:\n            return {\n                ...state,\n                loading: state.loading ? false : true,\n            };\n        case ERROR:\n            return {\n                error: null\n            };\n        case SEARCH_BUTTON:\n            return {\n                searchButton: null\n            };\n        case INPUT:\n            return {\n                input: null\n            };\n        case FILTER_DATE:\n            return {\n                filterDate: null\n            };\n        case RESET_INPUT:\n            return {\n                ...state,\n                searchButton: false,\n                input: \"\",\n                filterDate: \"\"\n            };\n        case RESET_APP:\n            return {\n                articles: null,\n                loading: window.history.state ? true : false, // On page refreshes show loading circle until getRequest populates state\n                error: null,\n                searchButton: false,\n                input: \"\",\n                filterDate: \"\",\n                userHasSearched: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer\n\n\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","\nimport { useEffect, useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport Results from './components/Results';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './App.css';\n\n\nfunction App() {\n // const history = useHistory();\n  \n  const [mainState, setMainState] = useState({\n    articles: null,\n    loading: false,\n    error: null,\n  //  userHasSearched: history.location.state ? true : false\n  })\n\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        <SearchBar />\n        <Results />\n      </div>\n      </Provider>\n     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nrequire('dotenv').config()\nreportWebVitals();\n"],"sourceRoot":""}